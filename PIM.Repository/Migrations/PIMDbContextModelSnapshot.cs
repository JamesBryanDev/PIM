// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PIM.Repository;

#nullable disable

namespace PIM.Repository.Migrations
{
    [DbContext(typeof(PIMDbContext))]
    partial class PIMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PIM.Models.Carrinho", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("clienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("statusPedido")
                        .HasColumnType("integer");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("clienteId");

                    b.ToTable("carrinhos");
                });

            modelBuilder.Entity("PIM.Models.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("PIM.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<long>("cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("enderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("id");

                    b.HasIndex("enderecoId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("PIM.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("PIM.Models.ItemCarrinho", b =>
                {
                    b.Property<int>("carrinhoId")
                        .HasColumnType("integer");

                    b.Property<int>("produtoId")
                        .HasColumnType("integer");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.Property<decimal>("total")
                        .HasColumnType("numeric");

                    b.HasKey("carrinhoId", "produtoId");

                    b.HasIndex("produtoId");

                    b.ToTable("itensCarrinhos");
                });

            modelBuilder.Entity("PIM.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("categoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("imagem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("preco")
                        .HasColumnType("numeric");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("vendedorId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("vendedorId");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("PIM.Models.Vendedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<decimal>("comissao")
                        .HasColumnType("numeric");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("enderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("nomeFantasia")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("razaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("id");

                    b.HasIndex("enderecoId");

                    b.ToTable("vendedores");
                });

            modelBuilder.Entity("PIM.Models.Carrinho", b =>
                {
                    b.HasOne("PIM.Models.Cliente", "cliente")
                        .WithMany("carrinhos")
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("PIM.Models.Cliente", b =>
                {
                    b.HasOne("PIM.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("PIM.Models.ItemCarrinho", b =>
                {
                    b.HasOne("PIM.Models.Carrinho", "carrinho")
                        .WithMany("produtos")
                        .HasForeignKey("carrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIM.Models.Produto", "produto")
                        .WithMany("carrinho")
                        .HasForeignKey("produtoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carrinho");

                    b.Navigation("produto");
                });

            modelBuilder.Entity("PIM.Models.Produto", b =>
                {
                    b.HasOne("PIM.Models.Categoria", "categoria")
                        .WithMany("produtos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIM.Models.Vendedor", "vendedor")
                        .WithMany("produtos")
                        .HasForeignKey("vendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("vendedor");
                });

            modelBuilder.Entity("PIM.Models.Vendedor", b =>
                {
                    b.HasOne("PIM.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("PIM.Models.Carrinho", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("PIM.Models.Categoria", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("PIM.Models.Cliente", b =>
                {
                    b.Navigation("carrinhos");
                });

            modelBuilder.Entity("PIM.Models.Produto", b =>
                {
                    b.Navigation("carrinho");
                });

            modelBuilder.Entity("PIM.Models.Vendedor", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
